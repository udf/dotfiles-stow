#!/usr/bin/env python

import itertools
import operator
import argparse


def distribute(sequence):
  """
  Enumerate the sequence evenly over the interval (0, 1).

  >>> list(distribute('abc'))
  [(0.25, 'a'), (0.5, 'b'), (0.75, 'c')]
  """
  m = len(sequence) + 1
  for i, x in enumerate(sequence, 1):
    yield i/m, x


def intersperse(*sequences):
  """
  Evenly intersperse the sequences.

  Based on https://stackoverflow.com/a/19293603/4518341

  >>> list(intersperse(range(10), 'abc'))
  [0, 1, 'a', 2, 3, 4, 'b', 5, 6, 7, 'c', 8, 9]
  >>> list(intersperse('XY', range(10), 'abc'))
  [0, 1, 'a', 2, 'X', 3, 4, 'b', 5, 6, 'Y', 7, 'c', 8, 9]
  >>> ''.join(intersperse('hlwl', 'eood', 'l r!'))
  'hello world!'
  """
  distributions = map(distribute, sequences)
  get0 = operator.itemgetter(0)
  for _, x in sorted(itertools.chain(*distributions), key=get0):
    yield x


parser = argparse.ArgumentParser()
parser.add_argument('a')
parser.add_argument('b')
args = parser.parse_args()

with open(args.a) as f:
  lines_a = [line.rstrip('\n') for line in f]

with open(args.b) as f:
  lines_b = [line.rstrip('\n') for line in f]

for line in intersperse(lines_a, lines_b):
  print(line)